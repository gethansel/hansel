name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
   runs-on: macos-latest
   steps:
     # The branch or tag ref that triggered the workflow will be checked out.
     - uses: actions/checkout@v1
     # Setup a flutter environment.
     - uses: subosito/flutter-action@v1
       with:
          flutter-version: '1.12.14'
          channel: 'dev'
     - run: cd mobileApp
     - run: ls
     - run: flutter pub get
     - run: flutter analyze
     - run: flutter test --coverage
  drive_ios:
    strategy:
      matrix:
        device:
          - "iPhone 8 (13.1)"
          - "iPhone 11 Pro Max (13.1)"
      fail-fast: false
    runs-on: macos-latest
    needs: test
    steps:
      - name: List all simulators
        run: xcrun instruments -s
      - name: Start Simulator
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.14'
          channel: 'dev'
      - name: Run Flutter Driver tests
        run: flutter drive --target=test_driver/app.dart
  drive_android:
    #if conditional to prevent a job from running
    if: github.event_name != 'pull_request'
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [21, 29]
        target: [default]
    needs: test
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.14'
          channel: 'dev'
      - name: Run Flutter Driver tests
        #GitHub Action for installing, configuring and running Android Emulators (work only Mac OS)
        uses: reactivecircus/android-emulator-runner@v1
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: flutter drive --target=test_driver/app.dart




